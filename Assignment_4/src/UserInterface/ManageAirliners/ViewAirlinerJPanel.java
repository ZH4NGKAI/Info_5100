/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageAirliners;

import Business.Airliner.Airliner;
import Business.Airliner.Airplane;
import Business.Airliner.Flight;
import Business.Airliner.FlightSchedule;
import Business.TravelAgency;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mac
 */
public class ViewAirlinerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewAirlinerJPanel
     */
    private JPanel CardSequenceJPane;
    private Airliner airliner;
    private TravelAgency TA;
    public ViewAirlinerJPanel(JPanel CardSequenceJPane, Airliner airliner, TravelAgency TA) {
        initComponents();
        this.CardSequenceJPane = CardSequenceJPane;
        this.airliner=airliner;
        this.TA = TA;
        populate();
        addItemToComboBox();
    }
    
    public void populate(){
        DefaultTableModel dtmFleet = (DefaultTableModel)tblAirlinerFleet.getModel();
        dtmFleet.setRowCount(0);
        for(Airplane a : airliner.getFleet().getList()) {
            Object[] row = new Object[dtmFleet.getColumnCount()];
            row[0]=a;
            row[1]=a.getType();
            row[2]=a.getSeatNum();
            row[3]=a.getFuelCapacity();
            dtmFleet.addRow(row);
        }
        
        DefaultTableModel dtmFlight = (DefaultTableModel)tblAirlinerFlight.getModel();
        dtmFlight.setRowCount(0);
        for(Flight a : airliner.getFlightSchedule().getList()) {
            Object[] row = new Object[dtmFlight.getColumnCount()];
            row[0]=a;
            row[1]=a.getFromPlace();
            row[2]=a.getToPlace();
            row[3]=a.getDate();
            row[4]=a.getTakeoffTime();
            dtmFlight.addRow(row);
        }
    }
    
    public void addItemToComboBox() {
        depCBox.removeAllItems();
        Set<String> fromSet = new HashSet();
        for (Flight flight: airliner.getFlightSchedule().getList()) {
            fromSet.add(flight.getFromPlace());
        }
        depCBox.setModel(new DefaultComboBoxModel(fromSet.toArray()));
        depCBox.setSelectedIndex(-1);
        
        depCBox.addItemListener(new ItemListener() {
                public void itemStateChanged(ItemEvent e) {
                    arrCBox.removeAllItems();
                    Set<String> toSet = new HashSet();
                    for (Flight flight: airliner.getFlightSchedule().getList()) {
                        if (flight.getFromPlace().equals(depCBox.getSelectedItem()))
                            toSet.add(flight.getToPlace());
                    }     
                    arrCBox.setModel(new DefaultComboBoxModel(toSet.toArray()));
                    arrCBox.setSelectedIndex(-1);
		}
	});
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        depCBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        arrCBox = new javax.swing.JComboBox<>();
        searchFlightBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAirlinerFleet = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAirlinerFlight = new javax.swing.JTable();

        btnBack.setText("<<back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        depCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));
        depCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depCBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("from");

        jLabel5.setText("to");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("View AirLiner Fleet and Flight");

        arrCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));

        searchFlightBtn.setText("Search");
        searchFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFlightBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("Fleet");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setText("Flight");

        tblAirlinerFleet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airplane Code", "Type", "Seat Number", "Fuel Capacity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAirlinerFleet);

        tblAirlinerFlight.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IATA Code", "from place", "landing place", "date", "takeoff time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblAirlinerFlight);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(depCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchFlightBtn)
                                    .addComponent(arrCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(68, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(depCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(13, 13, 13))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnBack)
                                        .addGap(15, 15, 15))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5)
                                            .addComponent(arrCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(searchFlightBtn)
                                        .addGap(81, 81, 81))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 87, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequenceJPane.remove(this);
        // refreshTable
        Component[] componentArray = CardSequenceJPane.getComponents();
        for(Component comp : componentArray){
            if(comp instanceof ManageAirlinersJPanel){
                ManageAirlinersJPanel manageP = (ManageAirlinersJPanel) comp;
                manageP.populate();
            }
        }

        CardLayout layout = (CardLayout) CardSequenceJPane.getLayout();
        layout.previous(CardSequenceJPane);
    }//GEN-LAST:event_btnBackActionPerformed

    private void searchFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFlightBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tblAirlinerFlight.getModel();
        dtm.setRowCount(0);
        

        for(Flight flight: this.airliner.getFlightSchedule().getList()) {
            if(flight.getFromPlace().equals(depCBox.getSelectedItem()) &&
                    flight.getToPlace().equals(arrCBox.getSelectedItem())) {
                    Object[] row = new Object[dtm.getColumnCount()];
                    row[0]=flight;
                    row[1]=flight.getFromPlace();
                    row[2]=flight.getToPlace();
                    row[3]=flight.getDate();
                    row[4]=flight.getTakeoffTime();
                    dtm.addRow(row);
                }
            }
        if(dtm.getRowCount() == 0)
        JOptionPane.showMessageDialog(null, "No Flight found.");
    }//GEN-LAST:event_searchFlightBtnActionPerformed

    private void depCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depCBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_depCBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> arrCBox;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox<String> depCBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton searchFlightBtn;
    private javax.swing.JTable tblAirlinerFleet;
    private javax.swing.JTable tblAirlinerFlight;
    // End of variables declaration//GEN-END:variables
}
