/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Office;

import Business.Airliner.Airliner;
import Business.Customer;
import Business.TravelAgency;
import Business.TravelOffice;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mac
 */
public class ManageCustomerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCustomerJPanel
     */
    private TravelAgency TA;
    private JPanel CardSequenceJPanel;
    private TravelOffice travelOffice;
    
    ManageCustomerJPanel(JPanel CardSequenceJPanel, TravelAgency TA, TravelOffice travelOffice) {
        this.CardSequenceJPanel = CardSequenceJPanel;
        this.travelOffice = travelOffice;
        this.TA = TA;
        initComponents();
        populate();
        tblListener();
    }
    
    public void tblListener(){
    tblCustomer.addMouseListener(new MouseAdapter()
        {
            @Override
            public void mouseClicked(MouseEvent event)
            {
                if(event.getClickCount() == 2){
                    int selectedRow = tblCustomer.rowAtPoint(event.getPoint());
                    Customer cus = (Customer) tblCustomer.getValueAt(selectedRow, 1);
                    ViewCustomerJPanel view;
                    view = new ViewCustomerJPanel(CardSequenceJPanel, cus);
                    CardLayout layout = (CardLayout)CardSequenceJPanel.getLayout();
                    CardSequenceJPanel.add("ViewCustomer", view);
                    layout.next(CardSequenceJPanel);
                }
            }
        });
    }
    
    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel)tblCustomer.getModel();
        dtm.setRowCount(0);
        
        for (Customer cus : travelOffice.getCustomerDirectory().getCustomerList()) {
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = cus.getSerialNum();
            row[1] = cus;
            row[2] = cus.getFromPlace();
            row[3] = cus.getToPlace();
            row[4] = cus.getTravelDate();
            dtm.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        btnLogOut = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();

        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial", "Name", "Departure", "Arrival ", "Travel Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCustomer.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblCustomer);

        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        btnNew.setText("New Customer");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Customer");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearch.setText("Search Flight");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(86, 86, 86))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, Short.MAX_VALUE)
                        .addComponent(btnLogOut, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addGap(231, 231, 231))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
        CardSequenceJPanel.remove(this);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        Component[] comps = this.CardSequenceJPanel.getComponents();
        for (Component comp: comps) {
            if (comp instanceof TravelOfficeLogInJPanel) {
                TravelOfficeLogInJPanel panel = (TravelOfficeLogInJPanel) comp;
                panel.initialize();
            }
        }
        layout.previous(CardSequenceJPanel);
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        NewCustomerJPanel newCus = new NewCustomerJPanel(CardSequenceJPanel, 
                travelOffice.getCustomerDirectory());
        CardLayout layout = (CardLayout)CardSequenceJPanel.getLayout();
        CardSequenceJPanel.add("NewCustomer", newCus);
        layout.next(CardSequenceJPanel);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblCustomer.getSelectedRow();
        if(selectedrow >= 0) {
            Customer cus = (Customer)tblCustomer.getValueAt(selectedrow, 1);
            int reply = JOptionPane.showConfirmDialog(null, "Are you sure to delete?",
                    null,JOptionPane.YES_NO_OPTION);
            if(reply == 0) {
                travelOffice.getCustomerDirectory().getCustomerList().remove(cus);
            }
            else
                return;
            populate();
            JOptionPane.showMessageDialog(null, "Airliner has been deleted!");

        } else {
            JOptionPane.showMessageDialog(null, "Please select any row!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblCustomer.getSelectedRow();
        if(selectedrow >= 0) {
            Customer cus = (Customer)tblCustomer.getValueAt(selectedrow, 1);
            if (cus.getTicket() != null) {
                JOptionPane.showMessageDialog(null, 
                        "Already have booked ticket for this customer!");
                return;
            }    
            BookTicketJPanel book = new BookTicketJPanel(CardSequenceJPanel, 
                TA, travelOffice, cus);
            CardLayout layout = (CardLayout)CardSequenceJPanel.getLayout();
            CardSequenceJPanel.add("BookTicket", book);
            layout.next(CardSequenceJPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select any row!");
        }
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCustomer;
    // End of variables declaration//GEN-END:variables
}
