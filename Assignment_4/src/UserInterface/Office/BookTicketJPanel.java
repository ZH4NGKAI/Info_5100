/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Office;

import Business.Airliner.Airliner;
import Business.Airliner.Flight;
import Business.Customer;
import Business.TravelAgency;
import Business.TravelOffice;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowSorter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author mac
 */
public class BookTicketJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BookTicketJPanel
     */
    private JPanel CardSequenceJPanel;
    private TravelOffice travelOffice;
    private Customer customer;
    private List<Flight> flightList;
    private TravelAgency TA;
    
    public BookTicketJPanel(JPanel CardSequenceJPanel, TravelAgency TA, 
            TravelOffice travelOffice, Customer customer) {
        initComponents();
        this.TA = TA;
        flightList = new ArrayList<>();
        this.CardSequenceJPanel = CardSequenceJPanel;
        this.travelOffice = travelOffice;
        this.customer = customer;
        searchFlights();
        populate();
    }
    
    private void searchFlights() {
        for (Airliner a: TA.getAirlinerDirectory().getList()) {
            for (Flight flight: a.getFlightSchedule().getList()){
                if (flight.getDate().equals(customer.getTravelDate())) {
                    if (flight.getFromPlace().equals(customer.getFromPlace())) {
                        if (flight.getToPlace().equals(customer.getToPlace())) {
                            if (flight.getTakeoffTime() <= 10 && 
                                    flight.getTakeoffTime() > 2 &&
                                    customer.getPreferedTime().equals("Morning")) {
                                flightList.add(flight);
                            }
                            else if (flight.getTakeoffTime() > 10 && 
                                    flight.getTakeoffTime() <= 18 &&
                                    customer.getPreferedTime().equals("Day")) {
                                flightList.add(flight);
                            }
                            else if ((flight.getTakeoffTime() > 18 || 
                                    flight.getTakeoffTime() <= 2) &&
                                    customer.getPreferedTime().equals("Evening")) {
                                flightList.add(flight);
                            }
                            else if (customer.getPreferedTime().equals("Any time"))
                                flightList.add(flight);
                        }
                    }
                }
            }
        }
    }
    
    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel)tblFlights.getModel();
        dtm.setRowCount(0);
        RowSorter<TableModel> rowSorter = new TableRowSorter(dtm);
        tblFlights.setRowSorter(rowSorter);
//        panel.add(table.getTableHeader(), BorderLayout.NORTH);
        for (Flight flight: flightList) { 
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = flight;
            row[1] = flight.getTakeoffTime()+":00";
            row[2] = flight.getLandingTime()+":00";
            row[3] = flight.getDuration()+" Hours" ;
            row[4] = flight.getAvaiSeat();
            dtm.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnBook = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFlights = new javax.swing.JTable();

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnBook.setText("Choose Seat");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        tblFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "IATA Code", "Takeoff Time", "Landing Time", "Duration", "Availabel Seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFlights);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequenceJPanel.remove(this);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        Component[] comps = this.CardSequenceJPanel.getComponents();
        for (Component comp: comps) {
            if (comp instanceof ManageCustomerJPanel) {
                ManageCustomerJPanel panel = (ManageCustomerJPanel) comp;
                panel.populate();
            }
        }
        layout.previous(CardSequenceJPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        // TODO add your handling code here:
        int selectedrow = tblFlights.getSelectedRow();
        if(selectedrow >= 0) {
            Flight flight = (Flight)tblFlights.getValueAt(selectedrow, 0);
            if (flight.getAvaiSeat() == 0) {
                JOptionPane.showMessageDialog(null, "No available seats!");
                return;
            }    
            ChooseSeatJPanel book = new ChooseSeatJPanel(CardSequenceJPanel, 
                customer, flight);
            CardLayout layout = (CardLayout)CardSequenceJPanel.getLayout();
            CardSequenceJPanel.add("ChooseSeat", book);
            layout.next(CardSequenceJPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Please select any row!");
        }
    }//GEN-LAST:event_btnBookActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBook;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFlights;
    // End of variables declaration//GEN-END:variables
}
