/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageFlights;

import Business.Airliner.Airliner;
import Business.Airliner.Airplane;
import Business.Airliner.Flight;
import Business.TravelAgency;
import UserInterface.YearMonthDay;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author mac
 */
public class CreateFlightJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateFlightJPanel
     */
    private JPanel CardSequenceJPane;
    private TravelAgency TA;
    private Airliner airliner;
    private YearMonthDay ymd;
    
    public CreateFlightJPanel(JPanel CardSequenceJPane, Airliner airliner, TravelAgency TA) {
        initComponents();
        this.CardSequenceJPane = CardSequenceJPane;
        this.TA = TA;
        this.airliner=airliner;
        
        
        addItemToComboBox();
    }
    
    public void addItemToComboBox() {
        airplaneCBox.removeAllItems();
        for(Airplane airplane: airliner.getFleet().getList()) {
            airplaneCBox.addItem(airplane);
        }
        airplaneCBox.setSelectedIndex(-1);
        Calendar a = Calendar.getInstance();
        ymd = new YearMonthDay(comboYear, comboMonth, comboDate);
        ymd.AddInfo();
        comboYear.addItemListener(new ItemListener() {
                public void itemStateChanged(ItemEvent e) {
                    int year = Integer.parseInt(comboYear.getSelectedItem().toString());
                    if (year == 2019) {
                        comboMonth.removeAllItems();
                        for (int i = a.get(Calendar.MONTH); i < 12; i++)
                            comboMonth.addItem(""+(i+1));
                    }
                    else {
                        comboMonth.removeAllItems();
                        for (int i = 1; i < 13; i++) 
                            comboMonth.addItem(""+i);
                        
                    }
                        
		}
	});
        comboMonth.addItemListener(ymd);
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTo = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        airplaneCBox = new javax.swing.JComboBox<>();
        comboYear = new javax.swing.JComboBox<>();
        comboMonth = new javax.swing.JComboBox<>();
        comboDate = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comboTakeoff = new javax.swing.JComboBox<>();
        comboLanding = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtDuration = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtIATA = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create New Flight");

        jLabel6.setText("Date:");

        jLabel2.setText("Airplane:");

        jLabel3.setText("To place:");

        btnCreate.setText("Create Flight");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        jLabel4.setText("Takeoff time:");

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Landing time:");

        jLabel8.setText("From place:");

        comboDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDateActionPerformed(evt);
            }
        });

        jLabel9.setText("Year");

        jLabel10.setText("Month");

        jLabel11.setText("Day");

        comboTakeoff.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00:00", "01:00", "02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "24:00" }));

        comboLanding.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00:00", "01:00", "02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "24:00" }));

        jLabel7.setText("Duration:");

        jLabel12.setText("IATA Code:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(346, 346, 346)
                                .addComponent(btnCreate))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(246, 246, 246)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(14, 14, 14)
                                            .addComponent(jLabel2))
                                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboTakeoff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboLanding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtIATA, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(airplaneCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 204, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(airplaneCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtIATA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(comboTakeoff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(comboLanding, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(btnCreate)
                .addGap(34, 34, 34)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:

        if (airplaneCBox.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Please select an airplane.");
            return;
        }
        //check from
        String from =txtFrom.getText();
        if (from==null||from.equals("")) {
            JOptionPane.showMessageDialog(null, "No blank field is allowed.", 
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        //check to
        String to = txtTo.getText();
        if (to==null||to.equals("")) {
            JOptionPane.showMessageDialog(null, "No blank field is allowed.", 
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //check iata code
        String iataCode = txtIATA.getText();
        if (iataCode==null||to.equals("")) {
            JOptionPane.showMessageDialog(null, "No blank field is allowed.", 
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //check takeoff
        int takeoff = comboTakeoff.getSelectedIndex();
//        if (!takeoff.equals("morning")||!takeoff.equals("day time")||!takeoff.equals("evening")) {
//            JOptionPane.showMessageDialog(null, 
//                    "only morning,day time and evening is allowed.", 
//                    "Warning", JOptionPane.WARNING_MESSAGE);
//            return;
//        }
        
        //check landing
        int landing =comboLanding.getSelectedIndex();
//        if (!landing.equals("morning")||!landing.equals("day time")||!landing.equals("evening")) {
//            JOptionPane.showMessageDialog(null, 
//                    "only morning,day time and evening is allowed.", 
//                    "Warning", JOptionPane.WARNING_MESSAGE);
//            return;
//        }
        
        //check date
        
        
        
        //check duration
        String duration = txtDuration.getText();
        
        try{
            Integer.parseInt(duration);

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please enter number for Duration");
            return;
        }
        

        //Create flight
        Flight flight = new Flight(airplaneCBox.getItemAt(airplaneCBox.getSelectedIndex()));
        airliner.addFlight(flight);
        flight.setIATACode(iataCode);
        flight.setFromPlace(from);
        flight.setToPlace(to);
        flight.setTakeoffTime(takeoff);
        flight.setLandingTime(landing);
        flight.setYear(Integer.parseInt((String)comboYear.getSelectedItem()));
        flight.setMonth(Integer.parseInt((String)comboMonth.getSelectedItem()));
        flight.setDay(Integer.parseInt((String)comboDate.getSelectedItem()));
        StringBuilder date = new StringBuilder();
        date.append((String)comboYear.getSelectedItem()).append('-').
                append((String)comboMonth.getSelectedItem()).append('-').
                append((String)comboDate.getSelectedItem());
        flight.setDate(date.toString());
        flight.setDuration(duration);
        

        //reset txt
        txtIATA.setText("");
        airplaneCBox.setSelectedItem("");
        txtFrom.setText("");
        txtTo.setText("");
        airplaneCBox.setSelectedIndex(-1);
        comboTakeoff.setSelectedIndex(-1);
        comboLanding.setSelectedIndex(-1);
        comboYear.setSelectedIndex(0);
        comboMonth.setSelectedIndex(0);
        comboDate.setSelectedIndex(0);
        
//        txtDate.setText("");
        txtDuration.setText("");

        JOptionPane.showMessageDialog(null, "Flight Successfully created.");
    }//GEN-LAST:event_btnCreateActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        CardSequenceJPane.remove(this);
        // refreshTable
        Component[] componentArray = this.CardSequenceJPane.getComponents();
        for(Component comp : componentArray){
            if(comp instanceof EditFlightJPanel){
                EditFlightJPanel manageP = (EditFlightJPanel) comp;
                manageP.populate();
                manageP.addItemToComboBox();
            }
        }

        CardLayout layout = (CardLayout) CardSequenceJPane.getLayout();
        layout.previous(CardSequenceJPane);
    }//GEN-LAST:event_backBtnActionPerformed

    private void comboDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Airplane> airplaneCBox;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox<String> comboDate;
    private javax.swing.JComboBox<String> comboLanding;
    private javax.swing.JComboBox<String> comboMonth;
    private javax.swing.JComboBox<String> comboTakeoff;
    private javax.swing.JComboBox<String> comboYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtIATA;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables
}
