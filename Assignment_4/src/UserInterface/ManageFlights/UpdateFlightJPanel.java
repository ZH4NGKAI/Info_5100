/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageFlights;

import Business.Airliner.Airliner;
import Business.Airliner.Airplane;
import Business.Airliner.Flight;
import Business.TravelAgency;
import UserInterface.YearMonthDay;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author wangbaichao
 */
public class UpdateFlightJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UpdateFlightJPanel
     */
    private JPanel CardSequenceJPane;
    private TravelAgency TA;
    private Airliner airliner;
    private Flight flight;
    private YearMonthDay ymd;
    
    
    public UpdateFlightJPanel(JPanel CardSequenceJPane, Airliner airliner, Flight flight, TravelAgency TA) {
        initComponents();
        this.CardSequenceJPane = CardSequenceJPane;
        this.TA = TA;
        this.airliner=airliner;
        this.flight=flight;
        addItemToComboBox();
        txtIATA.setText(flight.getIATACode());
        airplaneCBox.setSelectedItem(flight.getAirplane());
        txtFrom.setText(flight.getFromPlace());
        txtTo.setText(flight.getToPlace());
        comboTakeoff.setSelectedIndex(flight.getTakeoffTime());
        comboLanding.setSelectedIndex(flight.getLandingTime());
//        txtDate.setText(String.valueOf(flight.getDate()));
        comboYear.setSelectedItem(flight.getYear());
        comboMonth.setSelectedItem(flight.getMonth());
        comboDate.setSelectedItem(flight.getDay());
        txtDuration.setText(String.valueOf(flight.getDuration()));
        
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
        
    }
    
    public void addItemToComboBox() {
        airplaneCBox.removeAllItems();
        for(Airplane airplane: airliner.getFleet().getList()) {
            airplaneCBox.addItem(airplane);
        }
        Calendar a = Calendar.getInstance();
        ymd = new YearMonthDay(comboYear, comboMonth, comboDate);
        ymd.AddInfo();
        comboYear.addItemListener(new ItemListener() {
                public void itemStateChanged(ItemEvent e) {
                    int year = Integer.parseInt(comboYear.getSelectedItem().toString());
                    if (year == 2019) {
                        comboMonth.removeAllItems();
                        for (int i = a.get(Calendar.MONTH); i < 12; i++)
                            comboMonth.addItem(""+(i+1));
                    }
                    else {
                        comboMonth.removeAllItems();
                        for (int i = 1; i < 13; i++) 
                            comboMonth.addItem(""+i);
                        
                    }
                        
		}
	});
        comboMonth.addItemListener(ymd);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        airplaneCBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDuration = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboMonth = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        comboDate = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        comboTakeoff = new javax.swing.JComboBox<>();
        comboLanding = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboYear = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        txtIATA = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Update Flight");

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        airplaneCBox.setEnabled(false);

        jLabel7.setText("Duration:");

        jLabel5.setText("Landing time:");

        txtDuration.setEnabled(false);

        jLabel2.setText("Airplane:");

        comboMonth.setEnabled(false);

        jLabel8.setText("From place:");

        comboDate.setEnabled(false);
        comboDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDateActionPerformed(evt);
            }
        });

        jLabel3.setText("To place:");

        txtFrom.setEnabled(false);

        jLabel9.setText("Year");

        jLabel10.setText("Month");

        txtTo.setEnabled(false);

        jLabel11.setText("Day");

        comboTakeoff.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00:00", "01:00", "02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "24:00" }));
        comboTakeoff.setEnabled(false);

        comboLanding.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00:00", "01:00", "02:00", "03:00", "04:00", "05:00", "06:00", "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "24:00" }));
        comboLanding.setEnabled(false);

        jLabel4.setText("Takeoff time:");

        jLabel6.setText("Date:");

        comboYear.setEnabled(false);

        jLabel12.setText("IATA Code:");

        txtIATA.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel))
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel12)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIATA, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airplaneCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 209, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboTakeoff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboLanding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(207, 207, 207))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(220, 220, 220))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airplaneCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtIATA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(comboTakeoff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(comboLanding, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate)
                    .addComponent(btnCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        
        
        //check from
        String from =txtFrom.getText();
        if (from==null||from.equals("")) {
            JOptionPane.showMessageDialog(null, "No blank field is allowed.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        //check to
        String to = txtTo.getText();
        if (to==null||to.equals("")) {
            JOptionPane.showMessageDialog(null, "No blank field is allowed.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //check duration
        String duration = txtDuration.getText();
        
        try{
            Integer.parseInt(duration);

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please enter number for Duration");
            return;
        }
        
        //check iata code
        String iataCode = txtIATA.getText();
        if (iataCode==null||to.equals("")) {
            JOptionPane.showMessageDialog(null, "No blank field is allowed.", 
                    "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        //check takeoff
        int takeoff = comboTakeoff.getSelectedIndex();
//        if (!takeoff.equals("morning")||!takeoff.equals("day time")||!takeoff.equals("evening")) {
//            JOptionPane.showMessageDialog(null, "only morning,day time and evening is allowed.", "Warning", JOptionPane.WARNING_MESSAGE);
//            return;
//        }
        
        //check landing
        int landing =comboLanding.getSelectedIndex();
//        if (!landing.equals("morning")||!landing.equals("day time")||!landing.equals("evening")) {
//            JOptionPane.showMessageDialog(null, "only morning,day time and evening is allowed.", "Warning", JOptionPane.WARNING_MESSAGE);
//            return;
//        }
        
        //check date
//        String date = txtDate.getText();
    
//        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd");

//        try{
//            simpleDateFormat.parse(date);
//            
//        } catch (ParseException ex) {
//            JOptionPane.showMessageDialog(null, "please enter date in format yyyy-MM-dd", "Warning", JOptionPane.WARNING_MESSAGE);
//            return;
//        }
        flight.setYear(Integer.parseInt((String)comboYear.getSelectedItem()));
        flight.setMonth(Integer.parseInt((String)comboMonth.getSelectedItem()));
        flight.setDay(Integer.parseInt((String)comboDate.getSelectedItem()));
        StringBuilder date = new StringBuilder();
        date.append((String)comboYear.getSelectedItem()).append('-').
                append((String)comboMonth.getSelectedItem()).append('-').
                append((String)comboDate.getSelectedItem());
        flight.setDate(date.toString());
        
        

        //update flight
        flight.setIATACode(iataCode);
        flight.setAirplane(airplaneCBox.getItemAt(airplaneCBox.getSelectedIndex()));
        flight.setFromPlace(from);
        flight.setToPlace(to);
        flight.setTakeoffTime(takeoff);
        flight.setLandingTime(landing);
        
        txtIATA.setEnabled(false);
        airplaneCBox.setEnabled(false);
        txtFrom.setEnabled(false);
        txtTo.setEnabled(false);
        comboTakeoff.setEnabled(false);
        comboLanding.setEnabled(false);
        comboYear.setEnabled(false);
        comboMonth.setEnabled(false);
        comboDate.setEnabled(false);
        txtDuration.setEnabled(false);
        
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnCancel.setEnabled(false);
        
        JOptionPane.showMessageDialog(null, "Flight Successfully updated.");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        txtIATA.setEnabled(true);
        airplaneCBox.setEnabled(true);
        txtFrom.setEnabled(true);
        txtTo.setEnabled(true);
        comboTakeoff.setEnabled(true);
        comboLanding.setEnabled(true);
        comboYear.setEnabled(true);
        comboMonth.setEnabled(true);
        comboDate.setEnabled(true);
        txtDuration.setEnabled(true);
        
        btnSave.setEnabled(true);
        btnCancel.setEnabled(true);
        btnUpdate.setEnabled(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        airplaneCBox.setSelectedItem(flight.getAirplane());
        txtFrom.setText(flight.getFromPlace());
        txtTo.setText(flight.getToPlace());
        comboTakeoff.setSelectedIndex(flight.getTakeoffTime());
        comboLanding.setSelectedIndex(flight.getLandingTime());
//        txtDate.setText(String.valueOf(flight.getDate()));
        comboYear.setSelectedItem(flight.getYear());
        comboMonth.setSelectedItem(flight.getMonth());
        comboDate.setSelectedItem(flight.getDay());
        txtDuration.setText(String.valueOf(flight.getDuration()));
        
        txtIATA.setEnabled(false);
        airplaneCBox.setEnabled(false);
        txtFrom.setEnabled(false);
        txtTo.setEnabled(false);
        comboTakeoff.setEnabled(false);
        comboLanding.setEnabled(false);
        comboYear.setEnabled(false);
        comboMonth.setEnabled(false);
        comboDate.setEnabled(false);
        txtDuration.setEnabled(false);
        
        btnCancel.setEnabled(false);
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        CardSequenceJPane.remove(this);
        // refreshTable
        Component[] componentArray = CardSequenceJPane.getComponents();
        for(Component comp : componentArray){
            if(comp instanceof EditFlightJPanel){
                EditFlightJPanel manageP = (EditFlightJPanel) comp;
                manageP.populate();
            }
        }

        CardLayout layout = (CardLayout) CardSequenceJPane.getLayout();
        layout.previous(CardSequenceJPane);
    }//GEN-LAST:event_backBtnActionPerformed

    private void comboDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Airplane> airplaneCBox;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboDate;
    private javax.swing.JComboBox<String> comboLanding;
    private javax.swing.JComboBox<String> comboMonth;
    private javax.swing.JComboBox<String> comboTakeoff;
    private javax.swing.JComboBox<String> comboYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtDuration;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtIATA;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables
}
